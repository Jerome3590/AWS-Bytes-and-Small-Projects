FROM amazon/aws-lambda-provided:al2

RUN yum -y update
RUN yum -y install git libxml2-devel libcurl4-openssl-dev libfontconfig1-dev
RUN yum -y install java-1.8.0-openjdk-devel libcurl-devel wget unzip
RUN yum -y install readline-devel xorg-x11-server-devel \
 libX11-devel libXt-devel gcc-c++ gcc-gfortran \
 zlib-devel blas lapack openssl-devel \
 libjpeg-devel openjpeg2-devel openjpeg-libs fontconfig-devel
RUN yum -y install make automake autoconf libtool \
    libwebp libwebp-devel libicu-devel  \
    openjpeg-devel cairo-devel libpng-devel

RUN yum -y install amazon-linux-extras
RUN amazon-linux-extras enable python3.8
RUN yum -y install python3.8 python38-devel

#Setup AWSCLI
RUN pip3.8 install awscli --upgrade --user
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip
RUN ./aws/install

# OpenSSL
WORKDIR /var/task
RUN wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz
RUN tar -zxvf openssl-1.1.1g.tar.gz
RUN cd openssl-1.1.1g && ./config \
 --prefix=/var/task \
 --openssldir=/var/task \
 shared
RUN make -C openssl-1.1.1g -j $(nproc)
RUN make -C openssl-1.1.1g -j $(nproc) install
RUN cd ..

# curl
WORKDIR /var/task
RUN wget https://curl.haxx.se/download/curl-7.72.0.tar.gz
RUN tar -zxvf curl-7.72.0.tar.gz
RUN cd curl-7.72.0 && ./configure --prefix=/var/task --with-ssl
RUN make -C curl-7.72.0 -j $(nproc)
RUN make -C curl-7.72.0 -j $(nproc) install
RUN cd ..

# bzip2
WORKDIR /var/task
RUN wget -O bzip2-latest.tar.gz https://www.sourceware.org/pub/bzip2/bzip2-latest.tar.gz
RUN tar -zxvf bzip2-latest.tar.gz
RUN cd bzip2-1.0.8
RUN make -C bzip2-1.0.8 -j $(nproc)
RUN make -C bzip2-1.0.8 -j $(nproc) install PREFIX=var/task
RUN cd ..

# xz
WORKDIR /var/task
RUN wget https://tukaani.org/xz/xz-5.2.5.tar.gz
RUN tar -zxvf xz-5.2.5.tar.gz
RUN cd xz-5.2.5 && ./configure --prefix=/var/task --enable-small
RUN make -C xz-5.2.5 -j $(nproc)
RUN make -C xz-5.2.5 -j $(nproc) install
RUN cd ..

# pcre
WORKDIR /var/task
RUN wget https://ftp.pcre.org/pub/pcre/pcre2-10.35.tar.gz
RUN tar -zxvf pcre2-10.35.tar.gz
RUN cd pcre2-10.35 && ./configure --prefix=/var/task --enable-utf8 --enable-unicode-properties
RUN make -C pcre2-10.35 -j $(nproc)
RUN make -C pcre2-10.35 -j $(nproc) install
RUN cd ..

# libpng
WORKDIR /var/task
RUN wget https://sourceforge.net/projects/libpng/files/libpng16/1.6.37/libpng-1.6.37.tar.gz
RUN tar xzf libpng-1.6.37.tar.gz
RUN cd libpng-1.6.37 && ./configure --prefix=/var/task
RUN make -C libpng-1.6.37 -j $(nproc)
RUN make -C libpng-1.6.37 -j $(nproc) install
RUN cd ..

# jpeg
WORKDIR /var/task
RUN wget -c http://www.ijg.org/files/jpegsrc.v9d.tar.gz
RUN tar xzf jpegsrc.v9d.tar.gz
RUN cd jpeg-9d && ./configure --prefix=/var/task
RUN make -C jpeg-9d -j $(nproc)
RUN make -C jpeg-9d -j $(nproc) install
RUN cd ..

# Ghostscript for png
WORKDIR /var/task
RUN wget https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs920/ghostscript-9.20.tar.gz
RUN tar xzvf ghostscript-9.20.tar.gz
RUN cd ghostscript-9.20/ && ./autogen.sh && ./configure --prefix=/var/task
RUN make -C ghostscript-9.20 -j $(nproc)
RUN make -C ghostscript-9.20 -j $(nproc) install
RUN cd ..

# libxml2
WORKDIR /var/task
RUN wget http://xmlsoft.org/sources/libxml2-2.9.10.tar.gz
RUN tar -zxvf libxml2-2.9.10.tar.gz
RUN cd libxml2-2.9.10 && ./configure --prefix=/var/task --without-python
RUN make -C libxml2-2.9.10 -j $(nproc)
RUN make -C libxml2-2.9.10 -j $(nproc) install
RUN cd ..


# Install R
WORKDIR var/task
FROM public.ecr.aws/u6k6n4j8/r-base:latest

RUN export C_INCLUDE_PATH="$C_INCLUDE_PATH:var/task/lib:/usr/lib/x86_64-linux-gnu/include:usr/local/lib/:/usr/lib/x86_64-linux-gnu/python/include/python3.8/"
RUN export PATH="$PATH:/var/task/bin:/var/task/lib:/var/task/R/bin:/usr/local/bin/aws:/usr/bin/python3.8:usr/bin/pip3.8"
RUN export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/var/task/lib:/usr/lib/x86_64-linux-gnu/lib:/usr/lib/x86_64-linux-gnu/R/lib64/R/lib/:/usr/local/lib:/usr/lib/x86_64-linux-gnu/R/lib64/R/library/:/usr/lib/x86_64-linux-gnu/python/lib/"
RUN export LIBRARY_PATH="$LD_LIBRARY_PATH:var/task/lib:/usr/lib/x86_64-linux-gnu/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu/python/lib/"
RUN export LD_RUN_PATH="$LD_RUN_PATH:var/task/lib:/usr/lib/x86_64-linux-gnu/lib:/usr/local/lib"

RUN R -e 'install.packages(c("httr", "aws.signature", "logging", "jsonlite", "aws.s3", "data.table", \
"readxl", "purrr", "tidyr", "lubridate", "ggplot2", "gtable", "kableExtra", "dplyr", \
"magrittr", "deSolve", "bupaR", "tidyverse"), \
configure.vars="INCLUDE_DIR=/usr/lib/x86_64-linux-gnu:/var/task/lib \
LIB_DIR=/usr/lib/x86_64-linux-gnu:/var/task/lib", \
repos="http://cran.r-project.org")'

# Install RPY2
RUN pip3.8 install --upgrade pandas numpy scipy scikit-learn simpy rpy2

